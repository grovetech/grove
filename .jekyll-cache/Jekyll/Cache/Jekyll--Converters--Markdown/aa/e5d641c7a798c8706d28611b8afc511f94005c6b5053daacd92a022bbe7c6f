I"ÁT<p>Recently our Organization has grown to immense size and we are starting to outgrow the 10.6 Wiki server that we use primarily for our intranet. I have been looking at the 10.7 wiki server however it is not much better, our intranet has been plagued with bouts of corruption and plist issues that have caused slow load times, and extreme data loss. Its pretty clear that we need to move to a more stable information storage media. We have looked at WordPress and Drupal for this functionality Â however the biggest issue is getting the data from the Wiki Server into one of these installations. I noticed that both Drupal and WordPress have many plugins or modules that offer the ability to import content from CSV however getting a Wiki Server content set into CSV is not as easy as it sounds.</p>

<p>I found this <a href="https://maymay.net/blog/2008/09/22/extract-list-of-all-apple-wikiserver-wiki-titles-into-csv-format/">script</a>Â which works great at extracting the information that is stored in the plist file in each of the page folders in the Wiki structure. However grabbing the content out of the page.html file stored in each .page folder was what I was looking to do. I wrote a helper script that recursively copies and runs the script with a few modifications and then exports all the data I wanted to CSV. The script then copies the CSV files to the main export folder and then deletes all the files that it created in the WIki Server structure.</p>

<p><strong>Usage</strong></p>

<p><em>**</em>To use this script you must copy the folder and all three of the scripts inside it to the root level of your Server HD. Each script has a variable you must set, once you have set the initial path of your Wiki Deployment and the base URL structure you need to make the files executable. You can do this by</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">chmod </span>700 <span class="nt">-R</span> /export</code></pre></figure>

<p>this should make the scripts executable. Once done you need to run the run.sh script with sudo. This will trigger the export. This is no where near perfect so I have opened up a <a href="https://github.com/jonbrown21/OSX-Wiki-2-CSV">GitHub</a> repository for the changes that I have made, and the addition to the helper script that runs these recursively. This also exports content in user blogs as well.</p>

<p>The one challenge I am having is running the script that exports the page.html file content and keeping the encoding at utf-8 so that I donâ€™t get any artifacts or odd characters.</p>

<p>Here are the scripts</p>

<p><strong>Run.sh</strong></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c">#!/bin/bash</span>
<span class="c">##### CONFIGURE HERE ########</span>

<span class="c"># put your full path to your collaboration files</span>
<span class="nv">fullpath</span><span class="o">=</span>/Wiki/wiki/Collaboration
<span class="c">##### END CONFIGURATION #####</span>
<span class="nb">mkdir</span> /export/users
<span class="nb">mkdir</span> /export/users/blogs
<span class="nb">mkdir</span> /export/groups
<span class="nb">mkdir</span> /export/groups/blogs
<span class="nb">mkdir</span> /export/groups/wikis
<span class="k">for </span>i <span class="k">in</span> <span class="sb">`</span><span class="nb">ls</span> <span class="nv">$fullpath</span>/Groups<span class="sb">`</span>
<span class="k">do
</span><span class="nb">cp</span> /export/export-blog.sh <span class="nv">$fullpath</span>/Groups/<span class="nv">$i</span>/weblog/
<span class="nb">cp</span> /export/export.sh <span class="nv">$fullpath</span>/Groups/<span class="nv">$i</span>/wiki/

<span class="c"># Export Group Wikis</span>
<span class="nb">cd</span> <span class="nv">$fullpath</span>/Groups/<span class="nv">$i</span>/wiki/
./export.sh
<span class="nb">mkdir</span> /export/groups/wikis/<span class="nv">$i</span>
<span class="nb">cp</span> <span class="nv">$fullpath</span>/Groups/<span class="nv">$i</span>/wiki/wikipages.csv /export/groups/wikis/<span class="nv">$i</span>/
<span class="nb">rm</span> <span class="nv">$fullpath</span>/Groups/<span class="nv">$i</span>/wiki/wikipages.csv
<span class="nb">rm</span> <span class="nv">$fullpath</span>/Groups/<span class="nv">$i</span>/wiki/export.sh

<span class="c"># Export Group Blogs</span>
<span class="nb">cd</span> <span class="nv">$fullpath</span>/Groups/<span class="nv">$i</span>/weblog/
./export-blog.sh
<span class="nb">mkdir</span> /export/groups/blogs/<span class="nv">$i</span>
<span class="nb">cp</span> <span class="nv">$fullpath</span>/Groups/<span class="nv">$i</span>/weblog/wikipages.csv /export/groups/blogs/<span class="nv">$i</span>/
<span class="nb">rm</span> <span class="nv">$fullpath</span>/Groups/<span class="nv">$i</span>/weblog/wikipages.csv
<span class="nb">rm</span> <span class="nv">$fullpath</span>/Groups/<span class="nv">$i</span>/weblog/export-blog.sh
<span class="k">done
for </span>i <span class="k">in</span> <span class="sb">`</span><span class="nb">ls</span> <span class="nv">$fullpath</span>/Users<span class="sb">`</span>
<span class="k">do</span>

<span class="c"># Export User Blogs</span>
<span class="nb">cp</span> /export/export-blog.sh <span class="nv">$fullpath</span>/Users/<span class="nv">$i</span>/weblog/
<span class="nb">cd</span> <span class="nv">$fullpath</span>/Users/<span class="nv">$i</span>/weblog/
./export-blog.sh
<span class="nb">mkdir</span> /export/users/blogs/<span class="nv">$i</span>
<span class="nb">cp</span> <span class="nv">$fullpath</span>/Users/<span class="nv">$i</span>/weblog/wikipages.csv /export/users/blogs/<span class="nv">$i</span>/
<span class="nb">rm</span> <span class="nv">$fullpath</span>/Users/<span class="nv">$i</span>/weblog/wikipages.csv
<span class="nb">rm</span> <span class="nv">$fullpath</span>/Users/<span class="nv">$i</span>/weblog/export-blog.sh
<span class="k">done
</span><span class="nb">exit </span>0</code></pre></figure>

<p><strong>export.sh</strong></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c">#!/bin/sh - </span>
<span class="c">#</span>
<span class="c"># Script to extract data from an Apple WikiServer's data store by querying the</span>
<span class="c"># filesystem itself. Creates a 'wikipages.csv' file that's readable by any</span>
<span class="c"># spreadsheeting application, such as Numbers.app or Microsoft Excel.app.</span>
<span class="c">#</span>
<span class="c"># USAGE:   To use this script, change to the WikiServer's pages directory, then</span>
<span class="c">#          just run this script. A file named wikipages.csv will be created in</span>
<span class="c">#          your current directory. For instance:</span>
<span class="c">#</span>
<span class="c">#              cd /Library/Collaboration/Groups/mygroup/wiki  # dir to work in</span>
<span class="c">#              wikipages2csv.sh                               # run the script</span>
<span class="c">#              cp wikipages.csv ~/Desktop                     # save output</span>
<span class="c">#</span>
<span class="c"># WARNING: Since the WikiServer's files are only accessible as root, this script</span>
<span class="c">#          must be run as root to function. Additionally, this is not extremely</span>
<span class="c">#          well tested, so use at your own risk.</span>

<span class="c">##### CONFIGURE HERE ########</span>
<span class="c"># The prefix to append to generated links. NO SPACES!</span>
<span class="nv">WS_URI_PREFIX</span><span class="o">=</span>https://my-server.example.com/groups/wiki/
<span class="c">##### END CONFIGURATION #####</span>
<span class="c"># DO NOT EDIT PAST THIS LINE</span>
<span class="c">#############################</span>

<span class="nv">WS_CSV_OUTFILE</span><span class="o">=</span>wikipages.csv
<span class="nv">WS_PAGE_IDS_FILE</span><span class="o">=</span><span class="sb">`</span><span class="nb">mktemp </span>ws-ids.tmp.XXXXXX<span class="sb">`</span>

<span class="k">function </span>extractPlistValueByKey <span class="o">()</span> <span class="o">{</span>
    <span class="nb">head</span> <span class="nt">-n</span> 
      <span class="si">$(</span><span class="nb">expr </span>1 + <span class="sb">`</span><span class="nb">grep</span> <span class="nt">-n</span> <span class="s2">"&lt;key&gt;</span><span class="nv">$1</span><span class="s2">&lt;/key&gt;"</span> page.plist | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s1">':'</span> <span class="nt">-f</span> 1<span class="sb">`</span><span class="si">)</span> page.plist | 
        <span class="nb">tail</span> <span class="nt">-n</span> 1 | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s1">'&gt;'</span> <span class="nt">-f</span> 2 | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s1">'&lt;'</span> <span class="nt">-f</span> 1
<span class="o">}</span>
<span class="k">function </span>linkifyWikiServerTitle <span class="o">()</span> <span class="o">{</span>
    <span class="nb">echo</span> <span class="nv">$1</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s1">'s/ /_/g'</span> <span class="nt">-e</span> <span class="s1">'s/&amp;/_/g'</span> <span class="nt">-e</span> <span class="s1">'s/&gt;/_/g'</span> <span class="nt">-e</span> <span class="s1">'s/&lt;/_/g'</span> <span class="nt">-e</span> <span class="s1">'s/?//g'</span>
<span class="o">}</span>
<span class="k">function </span>formatISO8601date <span class="o">()</span> <span class="o">{</span>
    <span class="nb">echo</span> <span class="nv">$1</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s1">'s/T/ /'</span> <span class="nt">-e</span> <span class="s1">'s/Z$//'</span>
<span class="o">}</span>
<span class="k">function </span>csvQuote <span class="o">()</span> <span class="o">{</span>
    <span class="nb">echo</span> <span class="nv">$1</span> | <span class="nb">grep</span> <span class="nt">-q</span> <span class="s1">','</span> <span class="o">&gt;</span>/dev/null
    <span class="k">if</span> <span class="o">[</span> <span class="nv">$?</span> <span class="nt">-eq</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then</span> <span class="c"># if there are commas in the string</span>
        <span class="nb">echo</span> <span class="s1">'"'</span><span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span><span class="s1">'"'</span>   <span class="c"># quote the value</span>
    <span class="k">else
        </span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span>         <span class="c"># just output the as it was received</span>
    <span class="k">fi</span>
<span class="o">}</span>
<span class="nv">PSTALLY</span><span class="o">=</span><span class="sb">`</span><span class="nb">ls</span> <span class="nt">-l</span> | <span class="nb">grep</span> <span class="nt">-v</span> ^l | <span class="nb">wc</span> <span class="nt">-l</span><span class="sb">`</span>
<span class="k">if</span> <span class="o">[</span> <span class="nv">$PSTALLY</span> <span class="nt">-gt</span> 4 <span class="o">]</span> <span class="p">;</span> <span class="k">then
</span><span class="nb">ls</span> <span class="nt">-d</span> <span class="o">[</span>^w]<span class="k">*</span>.page | 
  <span class="nb">sed</span> <span class="nt">-e</span> <span class="s1">'s/^([a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9]).page$/1/'</span> <span class="o">&gt;</span> <span class="nv">$WS_PAGE_IDS_FILE</span>
<span class="k">fi

</span><span class="nb">echo</span> <span class="s2">"Title,ID,Date Created,Last Modified,URI,Content"</span> <span class="o">&gt;</span> <span class="nv">$WS_CSV_OUTFILE</span>
<span class="k">while </span><span class="nb">read id</span><span class="p">;</span> <span class="k">do
    </span><span class="nb">cd</span> <span class="nv">$id</span>.page
    <span class="nv">title</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span>extractPlistValueByKey title<span class="si">)</span><span class="s2">"</span>
    <span class="nv">created_date</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span>formatISO8601date <span class="si">$(</span>extractPlistValueByKey createdDate<span class="si">))</span><span class="s2">"</span>
    <span class="nv">modified_date</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span>formatISO8601date <span class="si">$(</span>extractPlistValueByKey modifiedDate<span class="si">))</span><span class="s2">"</span>
    <span class="nb">link</span><span class="o">=</span><span class="nv">$WS_URI_PREFIX</span><span class="s2">"</span><span class="nv">$id</span><span class="s2">"</span>/<span class="sb">`</span>linkifyWikiServerTitle <span class="s2">"</span><span class="nv">$title</span><span class="s2">"</span><span class="sb">`</span>.html
    <span class="nv">FILE_DATA</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="si">$(</span> /bin/cat page.html <span class="si">)</span> | <span class="nb">tr</span> <span class="s1">','</span> <span class="s1">' '</span><span class="sb">`</span>
    <span class="nb">cd</span> ..
    <span class="nb">echo</span> <span class="sb">`</span>csvQuote <span class="s2">"</span><span class="nv">$title</span><span class="s2">"</span><span class="sb">`</span>,<span class="nv">$id</span>,<span class="nv">$created_date</span>,<span class="nv">$modified_date</span>,<span class="sb">`</span>csvQuote <span class="s2">"</span><span class="nv">$link</span><span class="s2">"</span><span class="sb">`</span>,<span class="s2">"</span><span class="nv">$FILE_DATA</span><span class="s2">"</span> <span class="o">&gt;&gt;</span> <span class="nv">$WS_CSV_OUTFILE</span>
<span class="k">done</span> &lt; <span class="nv">$WS_PAGE_IDS_FILE</span>
<span class="nb">rm</span> <span class="nv">$WS_PAGE_IDS_FILE</span></code></pre></figure>

<p><strong>export-blog.sh</strong></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c">#!/bin/sh -</span>
<span class="c">#</span>
<span class="c"># Script to extract data from an Apple WikiServer's data store by querying the</span>
<span class="c"># filesystem itself. Creates a 'wikipages.csv' file that's readable by any</span>
<span class="c"># spreadsheeting application, such as Numbers.app or Microsoft Excel.app.</span>
<span class="c">#</span>
<span class="c"># USAGE:   To use this script, change to the WikiServer's pages directory, then</span>
<span class="c">#          just run this script. A file named wikipages.csv will be created in</span>
<span class="c">#          your current directory. For instance:</span>
<span class="c">#</span>
<span class="c">#              cd /Library/Collaboration/Groups/mygroup/wiki  # dir to work in</span>
<span class="c">#              wikipages2csv.sh                               # run the script</span>
<span class="c">#              cp wikipages.csv ~/Desktop                     # save output</span>
<span class="c">#</span>
<span class="c"># WARNING: Since the WikiServer's files are only accessible as root, this script</span>
<span class="c">#          must be run as root to function. Additionally, this is not extremely</span>
<span class="c">#          well tested, so use at your own risk.</span>

<span class="c">##### CONFIGURE HERE ########</span>
<span class="c"># The prefix to append to generated links. NO SPACES!</span>
<span class="nv">WS_URI_PREFIX</span><span class="o">=</span>https://my-server.example.com/groups/wiki/

<span class="c">##### END CONFIGURATION #####</span>
<span class="c"># DO NOT EDIT PAST THIS LINE</span>
<span class="c">#############################</span>

<span class="nv">WS_CSV_OUTFILE</span><span class="o">=</span>wikipages.csv
<span class="nv">WS_PAGE_IDS_FILE</span><span class="o">=</span><span class="sb">`</span><span class="nb">mktemp </span>ws-ids.tmp.XXXXXX<span class="sb">`</span>

<span class="k">function </span>extractPlistValueByKey <span class="o">()</span> <span class="o">{</span>
    <span class="nb">head</span> <span class="nt">-n</span> 
      <span class="si">$(</span><span class="nb">expr </span>1 + <span class="sb">`</span><span class="nb">grep</span> <span class="nt">-n</span> <span class="s2">"&lt;key&gt;</span><span class="nv">$1</span><span class="s2">&lt;/key&gt;"</span> page.plist | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s1">':'</span> <span class="nt">-f</span> 1<span class="sb">`</span><span class="si">)</span> page.plist | 
        <span class="nb">tail</span> <span class="nt">-n</span> 1 | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s1">'&gt;'</span> <span class="nt">-f</span> 2 | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s1">'&lt;'</span> <span class="nt">-f</span> 1
<span class="o">}</span>
<span class="k">function </span>linkifyWikiServerTitle <span class="o">()</span> <span class="o">{</span>
    <span class="nb">echo</span> <span class="nv">$1</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s1">'s/ /_/g'</span> <span class="nt">-e</span> <span class="s1">'s/&amp;/_/g'</span> <span class="nt">-e</span> <span class="s1">'s/&gt;/_/g'</span> <span class="nt">-e</span> <span class="s1">'s/&lt;/_/g'</span> <span class="nt">-e</span> <span class="s1">'s/?//g'</span>
<span class="o">}</span>
<span class="k">function </span>formatISO8601date <span class="o">()</span> <span class="o">{</span>
    <span class="nb">echo</span> <span class="nv">$1</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s1">'s/T/ /'</span> <span class="nt">-e</span> <span class="s1">'s/Z$//'</span>
<span class="o">}</span>
<span class="k">function </span>csvQuote <span class="o">()</span> <span class="o">{</span>
    <span class="nb">echo</span> <span class="nv">$1</span> | <span class="nb">grep</span> <span class="nt">-q</span> <span class="s1">','</span> <span class="o">&gt;</span>/dev/null
    <span class="k">if</span> <span class="o">[</span> <span class="nv">$?</span> <span class="nt">-eq</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then</span> <span class="c"># if there are commas in the string</span>
        <span class="nb">echo</span> <span class="s1">'"'</span><span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span><span class="s1">'"'</span>   <span class="c"># quote the value</span>
    <span class="k">else
        </span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span>         <span class="c"># just output the as it was received</span>
    <span class="k">fi</span>
<span class="o">}</span>
<span class="nb">ls</span> <span class="nt">-d</span> <span class="o">[</span>^w]<span class="k">*</span>.page | 
  <span class="nb">sed</span> <span class="nt">-e</span> <span class="s1">'s/^([a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9]).page$/1/'</span> <span class="o">&gt;</span> <span class="nv">$WS_PAGE_IDS_FILE</span>
<span class="nb">echo</span> <span class="s2">"Title,ID,Date Created,Last Modified,URI,Content"</span> <span class="o">&gt;</span> <span class="nv">$WS_CSV_OUTFILE</span>
<span class="k">while </span><span class="nb">read id</span><span class="p">;</span> <span class="k">do
    </span><span class="nb">cd</span> <span class="nv">$id</span>.page
    <span class="nv">title</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span>extractPlistValueByKey title<span class="si">)</span><span class="s2">"</span>
    <span class="nv">created_date</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span>formatISO8601date <span class="si">$(</span>extractPlistValueByKey createdDate<span class="si">))</span><span class="s2">"</span>
    <span class="nv">modified_date</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span>formatISO8601date <span class="si">$(</span>extractPlistValueByKey modifiedDate<span class="si">))</span><span class="s2">"</span>
    <span class="nb">link</span><span class="o">=</span><span class="nv">$WS_URI_PREFIX</span><span class="s2">"</span><span class="nv">$id</span><span class="s2">"</span>/<span class="sb">`</span>linkifyWikiServerTitle <span class="s2">"</span><span class="nv">$title</span><span class="s2">"</span><span class="sb">`</span>.html
    <span class="nv">FILE_DATA</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="si">$(</span> /bin/cat page.html <span class="si">)</span> | <span class="nb">tr</span> <span class="s1">','</span> <span class="s1">' '</span><span class="sb">`</span>
    <span class="nb">cd</span> ..
    <span class="nb">echo</span> <span class="sb">`</span>csvQuote <span class="s2">"</span><span class="nv">$title</span><span class="s2">"</span><span class="sb">`</span>,<span class="nv">$id</span>,<span class="nv">$created_date</span>,<span class="nv">$modified_date</span>,<span class="sb">`</span>csvQuote <span class="s2">"</span><span class="nv">$link</span><span class="s2">"</span><span class="sb">`</span>,<span class="s2">"</span><span class="nv">$FILE_DATA</span><span class="s2">"</span> <span class="o">&gt;&gt;</span> <span class="nv">$WS_CSV_OUTFILE</span>
<span class="k">done</span> &lt; <span class="nv">$WS_PAGE_IDS_FILE</span>
<span class="nb">rm</span> <span class="nv">$WS_PAGE_IDS_FILE</span></code></pre></figure>

:ET